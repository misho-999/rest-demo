spring.application.name=rest-demo

#Data Source Properties
#spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/my_rest_demo_db?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=1234
#JPA Properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
spring.jpa.properties.hibernate.format_sql=TRUE
spring.jpa.properties.hibernate.show_sql=FAlSE
spring.jpa.hibernate.ddl-auto=update

#Expose all spring boot actuator endpoints
management.endpoints.web.exposure.include=*
management.info.env.enabled=TRUE
management.endpoint.health.show-details=always

#Uncomment this 4 lines ang comment SecurityConfig.java for login with google credentials
#spring.security.oauth2.client.registration.google.client-id=INSERT_YOUR_API_CLIENT_ID
#spring.security.oauth2.client.registration.google.client-secret=INSERT_YOUR_API_CLIENT_SECRET
#spring.security.oauth2.client.registration.google.scope=openid
#spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google

#spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
#spring.security.oauth2.client.provider.google.token-uri=https://accounts.google.com/o/oauth2/token
#spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
#spring.security.oauth2.client.provider.google.user-name-attribute=Web client 1
